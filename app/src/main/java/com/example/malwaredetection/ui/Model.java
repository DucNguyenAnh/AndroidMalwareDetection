package com.example.malwaredetection.ui;

import android.content.Context;
import android.content.res.AssetFileDescriptor;

import org.tensorflow.lite.Interpreter;

import java.io.FileInputStream;
import java.io.IOException;
import java.nio.MappedByteBuffer;
import java.nio.channels.FileChannel;

public class Model {
    static Interpreter tflite;
    static int[][] inputs;
    static float[][] outputs;

    public Model(String feature, Context context) throws IOException {
        String[] temp;
        temp = feature.split(",");
        int size = temp.length;
        System.out.println("Input size: "+ size);
        int [] input = new int [size];
        for(int i=0; i<size; i++) {
            input[i] = Integer.parseInt(temp[i]);
        }
        inputs = new int[][]{input};
        outputs = new float [1][2];
        tflite = new Interpreter(loadModelFile(context));
        tflite.run(inputs,outputs);
    }

    public float[][] getResult(){
        return outputs;
    }

    static MappedByteBuffer loadModelFile(Context mycontext) throws IOException {
        String MODEL_ASSETS_PATH = "model.tflite";
        AssetFileDescriptor assetFileDescriptor = mycontext.getAssets().openFd(MODEL_ASSETS_PATH) ;
        FileInputStream fileInputStream = new FileInputStream( assetFileDescriptor.getFileDescriptor() ) ;
        FileChannel fileChannel = fileInputStream.getChannel() ;
        long startoffset = assetFileDescriptor.getStartOffset() ;
        long declaredLength = assetFileDescriptor.getDeclaredLength() ;
        return fileChannel.map( FileChannel.MapMode.READ_ONLY , startoffset , declaredLength ) ;
    }
}
